name: Release

on:
  push:
    branches:
      - main
      - master
      - refactor

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      # Set up Python using the version from pyproject.toml
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          cache: "pip"

      # Install UV using the official action
      - name: Install UV
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.10"  # Pin to a specific version for stability
      
      # Setup environment with dependencies
      - name: Setup environment
        run: |
          # Create and activate virtual environment
          uv venv
          source .venv/bin/activate
          
          # Install dependencies
          uv pip install -e ".[dev]"
          uv pip install build twine

      - name: Check if there is a parent commit
        id: check-parent-commit
        run: |
          echo "sha=$(git rev-parse --verify --quiet HEAD^)" >> $GITHUB_OUTPUT

      - name: Detect and tag new version
        id: check-version
        if: steps.check-parent-commit.outputs.sha
        uses: salsify/action-detect-and-tag-new-version@v2.0.3
        with:
          version-command: python -c "import re; print(re.search(r'version = \"([^\"]+)\"', open('pyproject.toml').read()).group(1))"
          create-tag: true
          tag-template: v{VERSION}
          tag-annotation-template: Released version {VERSION}

      - name: Bump version for developmental release
        if: ${{ ! steps.check-version.outputs.tag }}
        run: |
          source .venv/bin/activate
          uv version --bump patch
          new_version=$(grep -m1 "version =" pyproject.toml | cut -d '"' -f 2)
          sed -i "s/version = \"$new_version\"/version = \"$new_version.dev.$(date +%s)\"/" pyproject.toml

      - name: Build package
        run: |
          source .venv/bin/activate
          python -m build

      - name: Publish package on PyPI
        if: steps.check-version.outputs.tag
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}

      - name: Publish package on TestPyPI
        if: ${{ ! steps.check-version.outputs.tag }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
