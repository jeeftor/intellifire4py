[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
exclude = [
    "/.direnv",
    "/.venv",
    "/.git",
    "/.github",
    "/.nox",
]

[project]
name = "intellifire4py"
version = "4.2.1"
description = "Intellifire4Py"
authors = [
    {name = "Jeff Stein", email = "jeffstein@gmail.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3",
]
dependencies = [
    "pydantic>=1.10.8",
    "aenum>=3.1.11",
    "rich>=10.0.0",
    "aiohttp>=3.9.1",
]

[project.urls]
Homepage = "https://github.com/jeeftor/intellifire4py"
Repository = "https://github.com/jeeftor/intellifire4py"
Documentation = "https://intellifire4py.readthedocs.io"
"Bug Tracker" = "https://github.com/jeeftor/intellifire4py/issues"
Changelog = "https://github.com/jeeftor/intellifire4py/releases"

[project.optional-dependencies]
dev = [
    "mypy>=1.5.1",
    "pytest>=7.4.2",
    "sphinx>=7.2.6",
    "pre-commit>=3.4.0",
    "pre-commit-hooks==4.5.0",
    "pyupgrade>=3.13.0",
    "nox>=2023.4.22",
    "pytest-asyncio>=0.21.1",
    "sphinx-copybutton>=0.5.2",
    "myst-parser>=2.0.0",
    "sphinx-click>=5.0.1",
    "sphinx-autobuild>=2021.3.14",
    "typeguard>=4.1.5",
    "xdoctest>=1.1.1",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.4",
    "aioresponses>=0.7.6",
    "pytest-xdist>=3.5.0",
    "safety>=3.3.1",
    "pytest-timeout>=2.3.1",
    "furo>=2024.8.6",
    "pytest-mock>=3.14.0",
    "build>=1.0.0",
    "twine>=4.0.0",
    "uv>=0.8.10",
    "codespell>=2.4.1",
]

[project.scripts]
intellifire4py = "intellifire4py.__main__:main"

[bumpver]
current_version = "4.1.11"
version_pattern = "MAJOR.MINOR.PATCH"
commit_message = "bump version to {new_version}"
tag_message = "{new_version}"
commit = true
tag = true
push = true

[bumpver.file_patterns]
"pyproject.toml" = [
    'version = "{version}"',
]
"intellifire4py/__init__.py" = [
    '__version__ = "{version}"',
]
"README.md" = [
    'Version: {version}',
]

[tool.pytest.ini_options]
testpaths = [
    "tests"
]

[tool.coverage.paths]
source = ["intellifire4py", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["intellifire4py", "tests"]

[tool.coverage.report]
show_missing = true

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
python_version = "3.11"
strict = false
warn_unreachable = false
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
plugins = "pydantic.mypy"
ignore_missing_imports = true

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".mypy_cache", ".nox", ".pants.d",
    ".ruff_cache", ".svn", ".tox", ".venv", "__pypackages__", "_build", "buck-out",
    "build", "dist", "node_modules", "venv",
]

[tool.ruff.lint]
ignore = ["D202", "D412", "E501"]
select = ["B", "B9", "C", "D", "E", "F", "N", "S", "W"]
per-file-ignores = { "tests/*" = ["S101"] }

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-pytest-style]
mark-parentheses = false
fixture-parentheses = false

[tool.ruff.lint.isort]
known-first-party = ["open_meteo"]

[tool.pylint.MASTER]
ignore = [
    "tests"
]

[tool.pylint.BASIC]
good-names = [
    "_",
    "ex",
    "fp",
    "i",
    "id",
    "j",
    "k",
    "on",
    "Run",
    "T",
]

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "duplicate-code",
    "format",
    "unsubscriptable-object",
]
